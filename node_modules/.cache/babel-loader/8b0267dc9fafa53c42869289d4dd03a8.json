{"remainingRequest":"/Users/andrew/Documents/GitHub/isoDraw/node_modules/babel-loader/lib/index.js!/Users/andrew/Documents/GitHub/isoDraw/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/andrew/Documents/GitHub/isoDraw/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrew/Documents/GitHub/isoDraw/src/components/IsoDrawGrid.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrew/Documents/GitHub/isoDraw/src/components/IsoDrawGrid.vue","mtime":1593819000449},{"path":"/Users/andrew/Documents/GitHub/isoDraw/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/Documents/GitHub/isoDraw/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andrew/Documents/GitHub/isoDraw/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/Documents/GitHub/isoDraw/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5kYXRlLnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KdmFyIHdpZHRoID0gd2luZG93LmlubmVyV2lkdGggKiAzOwp2YXIgaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0ICogMS41OwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIklzb0RyYXdHcmlkIiwKICBwcm9wczogWyJyYWRpdXNSYXRpbyIsICJncmFiYmVyIl0sCiAgY29tcHV0ZWQ6IHsKICAgIHJlY2lldmVSYWRpdXNSYXRpbzogZnVuY3Rpb24gcmVjaWV2ZVJhZGl1c1JhdGlvKCkgewogICAgICByZXR1cm4gewogICAgICAgIHJhdGlvOiB0aGlzLnJhZGl1c1JhdGlvICogMC4wMQogICAgICB9OwogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzQWN0aXZlOiB0cnVlLAogICAgICBsaXN0OiBbXSwKICAgICAgZHJhZ0l0ZW1JZDogbnVsbCwKICAgICAgY2xpY2tJdGVtSWQ6IG51bGwsCiAgICAgIHJhdGlvOiAwLjMsCiAgICAgIGNvbmZpZ0tvbnZhOiB7CiAgICAgICAgd2lkdGg6IHdpZHRoLAogICAgICAgIGhlaWdodDogaGVpZ2h0LAogICAgICAgIHN0cm9rZVdpZHRoOiA0CiAgICAgIH0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVDbGljazogZnVuY3Rpb24gaGFuZGxlQ2xpY2soZSkgewogICAgICB2YXIgY2xpY2tJdGVtSWQgPSBlLnRhcmdldC5pZCgpOwogICAgICB2YXIgaXRlbSA9IHRoaXMubGlzdC5maW5kKGZ1bmN0aW9uIChpKSB7CiAgICAgICAgcmV0dXJuIGkuaWQgPT09IGNsaWNrSXRlbUlkOwogICAgICB9KTsKCiAgICAgIGlmIChpdGVtLmZpbGwgPT0gImJsdWUiKSB7CiAgICAgICAgaXRlbS5maWxsID0gInJlZCI7CiAgICAgIH0gZWxzZSBpZiAoaXRlbS5maWxsID09ICJyZWQiKSB7CiAgICAgICAgaXRlbS5maWxsID0gInllbGxvdyI7CiAgICAgIH0gZWxzZSBpZiAoaXRlbS5maWxsID09ICJ5ZWxsb3ciKSB7CiAgICAgICAgaXRlbS5maWxsID0gImJsdWUiOwogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgZm9yICh2YXIgaGV4Um93ID0gMDsgaGV4Um93IDwgMzA7IGhleFJvdysrKSB7CiAgICAgIGZvciAodmFyIG4gPSAwOyBuIDwgMzA7IG4rKykgewogICAgICAgIHRoaXMubGlzdC5wdXNoKHsKICAgICAgICAgIGlkOiBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAxMDAwMDAwMCkudG9TdHJpbmcoKSwKICAgICAgICAgIHg6IG4gKiAxNzAgKyBoZXhSb3cgJSAyICogODUsCiAgICAgICAgICBmaWxsOiAiYmx1ZSIsCiAgICAgICAgICB5OiAxNTAgKiBoZXhSb3cKICAgICAgICB9KTsKICAgICAgICB0aGlzLmxpc3QucHVzaCh7CiAgICAgICAgICBpZDogTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMTAwMDAwMDApLnRvU3RyaW5nKCksCiAgICAgICAgICByb3RhdGlvbjogMTgwLAogICAgICAgICAgeDogbiAqIDE3MCArIGhleFJvdyAlIDIgKiA4NSwKICAgICAgICAgIGZpbGw6ICJibHVlIiwKICAgICAgICAgIHk6IDE1MCAqIGhleFJvdyArIDk1CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["IsoDrawGrid.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,IAAA,KAAA,GAAA,MAAA,CAAA,UAAA,GAAA,CAAA;AACA,IAAA,MAAA,GAAA,MAAA,CAAA,WAAA,GAAA,GAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,KAAA,EAAA,CAAA,aAAA,EAAA,SAAA,CAFA;AAGA,EAAA,QAAA,EAAA;AACA,IAAA,kBADA,gCACA;AACA,aAAA;AAAA,QAAA,KAAA,EAAA,KAAA,WAAA,GAAA;AAAA,OAAA;AACA;AAHA,GAHA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,IADA;AAGA,MAAA,IAAA,EAAA,EAHA;AAIA,MAAA,UAAA,EAAA,IAJA;AAKA,MAAA,WAAA,EAAA,IALA;AAMA,MAAA,KAAA,EAAA,GANA;AAQA,MAAA,WAAA,EAAA;AACA,QAAA,KAAA,EAAA,KADA;AAEA,QAAA,MAAA,EAAA,MAFA;AAGA,QAAA,WAAA,EAAA;AAHA;AARA,KAAA;AAcA,GAvBA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,CADA,EACA;AACA,UAAA,WAAA,GAAA,CAAA,CAAA,MAAA,CAAA,EAAA,EAAA;AACA,UAAA,IAAA,GAAA,KAAA,IAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,EAAA,KAAA,WAAA;AAAA,OAAA,CAAA;;AAEA,UAAA,IAAA,CAAA,IAAA,IAAA,MAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,GAAA,KAAA;AACA,OAFA,MAEA,IAAA,IAAA,CAAA,IAAA,IAAA,KAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,GAAA,QAAA;AACA,OAFA,MAEA,IAAA,IAAA,CAAA,IAAA,IAAA,QAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,GAAA,MAAA;AACA;AACA;AAZA,GAzBA;AAwCA,EAAA,OAxCA,qBAwCA;AACA,SAAA,IAAA,MAAA,GAAA,CAAA,EAAA,MAAA,GAAA,EAAA,EAAA,MAAA,EAAA,EAAA;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAAA,EAAA,CAAA,EAAA,EAAA;AACA,aAAA,IAAA,CAAA,IAAA,CAAA;AACA,UAAA,EAAA,EAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,QAAA,EAAA,QAAA,EADA;AAEA,UAAA,CAAA,EAAA,CAAA,GAAA,GAAA,GAAA,MAAA,GAAA,CAAA,GAAA,EAFA;AAGA,UAAA,IAAA,EAAA,MAHA;AAIA,UAAA,CAAA,EAAA,MAAA;AAJA,SAAA;AAMA,aAAA,IAAA,CAAA,IAAA,CAAA;AACA,UAAA,EAAA,EAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,QAAA,EAAA,QAAA,EADA;AAEA,UAAA,QAAA,EAAA,GAFA;AAGA,UAAA,CAAA,EAAA,CAAA,GAAA,GAAA,GAAA,MAAA,GAAA,CAAA,GAAA,EAHA;AAIA,UAAA,IAAA,EAAA,MAJA;AAKA,UAAA,CAAA,EAAA,MAAA,MAAA,GAAA;AALA,SAAA;AAOA;AACA;AACA;AA1DA,CAAA","sourcesContent":["<template>\n  <div id=\"IsoDrawGrid\">\n    <v-stage ref=\"stage\" :draggable=\"grabber\" :config=\"configKonva\">\n      <v-layer ref=\"layer\">\n        <v-regular-polygon\n          @click=\"handleClick\"\n          @tap=\"handleClick\"\n          v-for=\"item in list\"\n          :key=\"item.id\"\n          :config=\"{\n            x: item.x * recieveRadiusRatio.ratio,\n            y: item.y * recieveRadiusRatio.ratio,\n           \n            id: item.id,\n            \n            sides:3,\n            radius:100 * recieveRadiusRatio.ratio,\n            fill:item.fill,\n            stroke: 'yellow',\n            rotation: item.rotation\n\n          }\"\n        ></v-regular-polygon>\n      </v-layer>\n    </v-stage>\n  </div>\n</template>\n\n<script>\nconst width = window.innerWidth * 3;\nconst height = window.innerHeight * 1.5;\nexport default {\n  name: \"IsoDrawGrid\",\n  props: [\"radiusRatio\", \"grabber\"],\n  computed: {\n    recieveRadiusRatio() {\n      return { ratio: this.radiusRatio * 0.01 };\n    }\n  },\n  data() {\n    return {\n      isActive: true,\n\n      list: [],\n      dragItemId: null,\n      clickItemId: null,\n      ratio: 0.3,\n\n      configKonva: {\n        width: width,\n        height: height,\n        strokeWidth: 4\n      }\n    };\n  },\n\n  methods: {\n    handleClick(e) {\n      const clickItemId = e.target.id();\n      const item = this.list.find(i => i.id === clickItemId);\n\n      if (item.fill == \"blue\") {\n        item.fill = \"red\";\n      } else if (item.fill == \"red\") {\n        item.fill = \"yellow\";\n      } else if (item.fill == \"yellow\") {\n        item.fill = \"blue\";\n      }\n    }\n  },\n\n  mounted() {\n    for (let hexRow = 0; hexRow < 30; hexRow++) {\n      for (let n = 0; n < 30; n++) {\n        this.list.push({\n          id: Math.round(Math.random() * 10000000).toString(),\n          x: n * 170 + (hexRow % 2) * 85,\n          fill: \"blue\",\n          y: 150 * hexRow\n        });\n        this.list.push({\n          id: Math.round(Math.random() * 10000000).toString(),\n          rotation: 180,\n          x: n * 170 + (hexRow % 2) * 85,\n          fill: \"blue\",\n          y: 150 * hexRow + 95\n        });\n      }\n    }\n  }\n};\n</script>\n\n<style>\nbody {\n  margin: 0;\n  padding: 0;\n}\n</style>"],"sourceRoot":"src/components"}]}