{"remainingRequest":"/Users/andrew/code/ModalPlex/isoDraw/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrew/code/ModalPlex/isoDraw/src/components/imageLoad.vue?vue&type=style&index=0&id=640d2c81&scoped=true&lang=css&","dependencies":[{"path":"/Users/andrew/code/ModalPlex/isoDraw/src/components/imageLoad.vue","mtime":1574894982889},{"path":"/Users/andrew/code/ModalPlex/isoDraw/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/code/ModalPlex/isoDraw/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/andrew/code/ModalPlex/isoDraw/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/andrew/code/ModalPlex/isoDraw/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrew/code/ModalPlex/isoDraw/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5tYXJnZSB7CiAgbWFyZ2luLWJvdHRvbTogLTRweDsKfQo="},{"version":3,"sources":["imageLoad.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA","file":"imageLoad.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"imageLoad\">\n    <box class=\"is-fullwidth\">\n      <div>\n        <div class=\"file-upload-form\">\n          Upload an image file:\n          <input type=\"file\" @change=\"previewImage\" accept=\"image/*\" />\n        </div>\n        <div class=\"image-preview\" v-if=\"imageData.length > 0\">\n          <p>inside imageload</p>\n          <img class=\"preview\" :src=\"imageData\" />\n        </div>\n      </div>\n    </box>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"imageLoad\",\n  data() {\n    return {\n      imageData: \"\"\n    };\n  },\n  methods: {\n    previewImage: function(event) {\n      // Reference to the DOM input element\n      var input = event.target;\n      // Ensure that you have a file before attempting to read it\n      if (input.files && input.files[0]) {\n        // create a new FileReader to read this image and convert to base64 format\n        var reader = new FileReader();\n        // Define a callback function to run, when FileReader finishes its job\n        reader.onload = e => {\n          // Note: arrow function used here, so that \"this.imageData\" refers to the imageData of Vue component\n          // Read image as base64 and set to imageData\n          this.imageData = e.target.result;\n          this.$emit(\"fileImage\", this.imageData);\n        };\n        // Start the reader job - read file as a data url (base64 format)\n        reader.readAsDataURL(input.files[0]);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.marge {\n  margin-bottom: -4px;\n}\n</style>"]}]}